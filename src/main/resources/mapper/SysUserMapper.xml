<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcj.smartclub.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.lcj.smartclub.pojo.SysUser">
        <id column="id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phoneNum" property="phoneNum" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <collection column="id" property="sysRoles" javaType="java.util.List" ofType="com.lcj.smartclub.pojo.SysRole"
                    select="findRoleByUserId"/>
    </resultMap>

    <resultMap id="SysRole_BaseResultMap" type="com.lcj.smartclub.pojo.SysRole">
        <id column="id" property="roleId" jdbcType="INTEGER"/>
        <result column="roleName" property="roleName" jdbcType="VARCHAR"/>
        <result column="roleDesc" property="Desc" jdbcType="VARCHAR"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id,username,password,salt,email,phoneNum,status
    </sql>

    <sql id="SysRole_Base_Column_List">
        id,roleName,roleDesc
    </sql>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user;
    </select>

    <select id="findUserByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where username = #{username};
    </select>

    <select id="findRoleByUserId" resultMap="SysRole_BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="SysRole_Base_Column_List"/>
        from sys_role
        where id in
        (select roleId from sys_user_role where userId = #{userId});
    </select>

    <select id="findOtherRoleByUserId" resultMap="SysRole_BaseResultMap">
        select
        <include refid="SysRole_Base_Column_List"/>
        from sys_role
        where id not in
        (select roleId from sys_user_role where userId = #{userId});
    </select>

    <insert id="insert" parameterType="com.lcj.smartclub.pojo.SysUser">
        insert into sys_user(id,username,password,salt,email,phoneNum,status)
        values(#{userId},#{username},#{password},#{salt},#{email},#{phoneNum},#{status});
    </insert>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from sys_user_role
        where userId = #{userId};
        delete from sys_user
        where id = #{userId};
    </delete>

    <insert id="addRoleToUser" parameterType="java.lang.Integer">
        insert into sys_user_role(userId,roleId)
        values(#{userId},#{roleId});
    </insert>

    <delete id="deleteRoleFromUser" parameterType="java.lang.Integer">
        delete from sys_user_role
        where userId = #{userId} and roleId = #{roleId};
    </delete>

    <update id="update" parameterType="com.lcj.smartclub.pojo.SysUser">
        update sys_user
        <set>
            <if test="username!=null">
                username = #{username},
            </if>
            <if test="email!=null">
                email = #{email},
            </if>
            <if test="phoneNum!=null">
                phoneNum = #{phoneNum},
            </if>
            <if test="password!=null">
                password = #{password},
            </if>
        </set>
        where id = #{userId};
    </update>
</mapper>